@use "../utils/common";

.tooltip {
    $offset: 10px;
    $arrow-size: 5px;
    $color: var(--border);

    user-select: none;
    background-color: $color;
    color: var(--text);
    padding: 5px 10px;
    border-radius: 10px;
    width: fit-content;
    max-width: 250px;
    pointer-events: none;
    font-size: 1rem;
    
    position: fixed;
    top: 0px;
    left: 0px;
    z-index: common.z-index("tooltip");

    /* Visibility */
    visibility: hidden;
    &--visible {
        animation: fade-in 0.1s linear 0s 1;
        visibility: visible;
    }

    /* Arrow */
    &::before{
        content: "";
        border: #{$arrow-size} solid transparent;
        position: absolute
    }

    /* Direction variants */
    &--right::before {
            top: calc(50% - #{$arrow-size});
            right: 100%;
            border-right-color: $color; 
    }
    &--top::before {
            left: calc(50% - #{$arrow-size});
            top: 100%;
            border-top-color: $color; 
    }
    &--left::before {
            top: calc(50% - #{$arrow-size});
            left: 100%;
            border-left-color: $color; 
    }
    &--bottom::before {
            left: calc(50% - #{$arrow-size});
            bottom: 100%;
            border-bottom-color: $color; 
    }
}

@keyframes fade-in {
    0% {
        opacity: 0;
        visibility: hidden;
    }
    100% {
        opacity: 100%;
        visibility: visible;
    }
}

.overlay {
    position: fixed;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: common.z-index("overlay");
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    
    &__dim {
        background-color: var(--border);
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        position: fixed;
    }
    &__modal {
        z-index: common.z-index("modal");
        position: relative;

        &--bg {
            background-color: var(--bg-focus);
            border-radius: 15px;
            padding: 20px 25px;
            box-sizing: border-box;
            max-height: 75%;
            display: flex;
            flex-direction: column;
            min-width: 400px;
            max-width: 75%;
        }
    }

    &__title {
        font-size: 1.2rem;
        border-bottom: 2px solid var(--text-greyed);
        padding: 4px 2px;
        flex: 0 0 auto;
        font-weight: bold;
        margin-bottom: 0.8rem;
    }

    &__close{
        cursor: pointer;
        float: right;

        &:hover > path {
            fill: var(--text) !important;
        }
    }

    &__body {
        flex: 1 1 auto;
        overflow: hidden auto;
        padding: 0 10px;
        @include common.scroll-style();
    }

    &__buttons {
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
    }
}

@mixin startframe {
    opacity: 0;
}
@mixin endframe {
    /* End opacity will end up as what is set in the component */
}

@keyframes overlay__dim__fade-in {
    0% {
        @include startframe;
    }
    100% {
        @include endframe;
    }
}
@keyframes overlay__dim__fade-out {
    0% {
        @include endframe;
    }
    100% {
        @include startframe;
    }
}


.image-popup {
    max-height: 70vh;
    max-width: 70vw;

    &__buttons {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        width: min-content;
        right: 0;
        position: absolute;

        .button__icon {
            margin: 0.1rem;
            padding: 0.1rem;
        }
    }
}

/* Context menu holder */
.context-menu {
    position: fixed;
    z-index: common.z-index("popup");
    border-radius: 8px;
    padding: 6px;
    background-color: var(--bg-dark);
    box-shadow: 0 2px 8px -2px var(--border);
}

